name: ECS Deploy ci-cd.yaml
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

env:
  AWS_EC2_METADATA_DISABLED: "true" # https://github.com/aws/aws-cli/issues/5262

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag and Push Docker Image
        env:
          IMAGE_NAME_WITH_TAG: ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
        run: |
          docker build . -f Dockerfile -t ${IMAGE_NAME_WITH_TAG}
          docker push ${IMAGE_NAME_WITH_TAG}

  cd:
    runs-on: ubuntu-latest

    needs:
      - ci

    steps:
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-west-2

      - name: Update Task Definition
        env:
          IMAGE_NAME_WITH_TAG: ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
        run: |
          aws ecs describe-task-definition --task-definition demo-task --query taskDefinition > task-def.json
          jq --arg IMAGE "$IMAGE_NAME_WITH_TAG" '.containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.placementConstraints) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)' task-def.json > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Deploy ECS Service
        env:
          AWS_ECS_SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
          AWS_ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
          AWS_REGION: us-west-2
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition demo-task --query 'taskDefinition.family' --output text)
          REVISION=$(aws ecs describe-task-definition --task-definition demo-task --query 'taskDefinition.revision' --output text)
          aws ecs update-service \
           --service ${AWS_ECS_SERVICE_NAME} \
           --cluster ${AWS_ECS_CLUSTER_NAME} \
           --region ${AWS_REGION} \
           --task-definition ${TASK_DEFINITION}:${REVISION}